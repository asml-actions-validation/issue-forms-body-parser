{"version":3,"file":"parse.cjs","sources":["../src/parsers/date.js","../src/parsers/time.js","../src/parsers/index.js","../src/parsers/list.js","../src/parse.js","../src/parsers/duration.js"],"sourcesContent":["'use strict'\n\nimport { parse, isMatch } from 'date-fns'\nimport { zonedTimeToUtc } from 'date-fns-tz'\n\nconst loc = 'UTC'\nconst commonDateFormats = [\n  'yyyy-MM-dd',\n  'dd/MM/yyyy',\n  'dd/MM/yy',\n  'dd-MM-yyyy',\n  'dd-MM-yy',\n  'dd.MM.yyyy',\n  'dd.MM.yy'\n]\n\nexport default function parseDate(text) {\n  const match = commonDateFormats.map((format) => {\n    return isMatch(text, format)\n  })\n  if (match.indexOf(true) > -1) {\n    const date = zonedTimeToUtc(\n      parse(text, commonDateFormats[match.indexOf(true)], new Date()),\n      loc\n    ).toJSON()\n    return date.split('T')[0]\n  } else {\n    return null\n  }\n}\n","'use strict'\n\nimport { parse, isMatch } from 'date-fns'\nimport { zonedTimeToUtc, formatInTimeZone } from 'date-fns-tz'\n\nconst loc = 'UTC'\nconst commonTimeFormats = [\n  'HH:mm',\n  'HH.mm',\n  'hh:mm aaa',\n  'hh:mm a..aa',\n  'hh:mm aaaa'\n]\n\nexport default function parseTime(text) {\n  const match = commonTimeFormats.map((format) => {\n    return isMatch(text, format)\n  })\n  if (match.indexOf(true) > -1) {\n    const time = zonedTimeToUtc(\n      parse(text, commonTimeFormats[match.indexOf(true)], new Date()),\n      loc\n    )\n    return formatInTimeZone(time, loc, 'HH:mm')\n  } else {\n    return null\n  }\n}\n","'use strict'\n\nimport date from './date.js'\nimport time from './time.js'\nimport duration from './duration.js'\nimport list from './list.js'\n\nexport const parseDate = date\nexport const parseTime = time\nexport const parseDuration = duration\nexport const parseList = list\n","'use strict'\n\nexport default function parseList(list) {\n  return list.children\n    .map((item) => {\n      const listItem = {}\n      if (item.type === 'list') {\n        return parseList(list)\n      } else if (item.type === 'listItem') {\n        listItem.checked = item.checked\n        return item.children\n          .map((child) => {\n            if (child.type === 'paragraph') {\n              listItem.text = child.children\n                .map((c) => {\n                  if (c.type === 'link') {\n                    listItem.link = c.url\n                    return `[${c.children[0].value}](${c.url})`\n                  } else {\n                    return c.value\n                  }\n                })\n                .filter((x) => !!x)\n                .join('')\n              return listItem\n            }\n          })\n          .filter((x) => !!x)\n      }\n    })\n    .filter((x) => !!x)\n}\n","'use strict'\n\nimport { unified } from 'unified'\nimport remarkParse from 'remark-parse'\nimport remarkGfm from 'remark-gfm'\nimport slugify from '@sindresorhus/slugify'\nimport remarkStringify from 'remark-stringify'\nimport stripFinalNewline from 'strip-final-newline'\n\nimport {\n  parseDate,\n  parseTime,\n  parseDuration,\n  parseList\n} from './parsers/index.js'\n\nexport default async function parseMD(body) {\n  const tokens = await unified().use(remarkParse).use(remarkGfm).parse(body)\n  if (!tokens) {\n    return []\n  }\n\n  const structuredResponse = {}\n  let currentHeading = null\n  for (const token of tokens.children) {\n    const text = await unified()\n      .use(remarkGfm)\n      .use(remarkStringify)\n      .stringify(token)\n    let cleanText = stripFinalNewline(text)\n\n    // remove `\\\\_`\n    if (cleanText.indexOf('\\\\_') > -1) {\n      cleanText = cleanText.replace(/\\\\_/g, '_')\n    }\n\n    // issue forms uses h3 as a heading\n    if (token.type === 'heading') {\n      currentHeading = slugify(token.children[0].value)\n      structuredResponse[currentHeading] = {\n        title: token.children[0].value,\n        heading: token.depth,\n        content: []\n      }\n    } else if (token.type === 'paragraph' && currentHeading) {\n      const obj = structuredResponse[currentHeading]\n\n      const date = parseDate(cleanText)\n      const time = parseTime(cleanText)\n      const duration = parseDuration(cleanText)\n\n      if (date) {\n        obj.date = date\n      }\n\n      if (time) {\n        obj.time = time\n      }\n\n      if (duration) {\n        obj.duration = duration\n      }\n\n      obj.content.push(cleanText)\n    } else if (token.type === 'list') {\n      const obj = structuredResponse[currentHeading]\n      obj.text = cleanText\n      obj.list = parseList(token).flat()\n    } else if (token.type === 'html') {\n      const obj = structuredResponse[currentHeading]\n      obj.content.push(token.html)\n    } else if (token.type === 'code') {\n      const obj = structuredResponse[currentHeading]\n      obj.lang = token.lang\n      obj.text = cleanText\n    } else {\n      if (process.env.DEBUG) {\n        console.log('unhandled token type')\n        console.log(token)\n      }\n    }\n  }\n\n  for (const key in structuredResponse) {\n    const token = structuredResponse[key]\n    const content = token.content.filter(Boolean)\n    if (content && content.length > 0) {\n      if (content.length === 1) {\n        token.text = content[0]\n      }\n      token.text = content.join('\\n\\n')\n    }\n    token.content = content\n  }\n\n  return structuredResponse\n}\n","'use strict'\n\nexport default function parseDuration(text) {\n  let matched = false\n  const duration = {\n    hours: 0,\n    minutes: 0\n  }\n\n  const hoursAndMinutes = new RegExp(/([0-9]+)h([0-9]+)m/)\n  const hours = new RegExp(/([0-9]+)h/)\n\n  if (text.match(hoursAndMinutes)) {\n    matched = true\n    const [, h, m] = text.match(hoursAndMinutes)\n    duration.hours = parseInt(h)\n    duration.minutes = parseInt(m)\n  } else if (text.match(hours)) {\n    matched = true\n    const [, h] = text.match(hours)\n    duration.hours = parseInt(h)\n    duration.minutes = 0\n  }\n\n  if (matched) {\n    return duration\n  } else {\n    return null\n  }\n}\n"],"names":["commonDateFormats","commonTimeFormats","parseList","list","children","map","item","listItem","type","checked","child","text","c","link","url","value","filter","x","join","_settle","pact","state","s","_Pact","o","bind","v","then","observer","prototype","onFulfilled","onRejected","result","this","callback","e","_this","_isSettledPact","thenable","body","_iterator","_step","token","cleanText","obj","date","time","duration","key","content","Promise","resolve","unified","use","remarkParse","remarkGfm","parse","tokens","_temp2","structuredResponse","Boolean","length","currentHeading","_createForOfIteratorHelperLoose","_temp","test","update","stage","shouldContinue","updateValue","reject","_resumeAfterTest","_resumeAfterBody","_resumeAfterUpdate","_for","done","remarkStringify","stringify","_unified$use$use$stri","match","stripFinalNewline","indexOf","replace","slugify","title","heading","depth","format","isMatch","zonedTimeToUtc","Date","toJSON","split","formatInTimeZone","parseTime","matched","hours","minutes","hoursAndMinutes","RegExp","_text$match","m","parseInt","_text$match2","parseDuration","push","flat","html","lang","process","env","DEBUG","console","log"],"mappings":"sfAKA,IACMA,EAAoB,CACxB,aACA,aACA,WACA,aACA,WACA,aACA,YCPIC,EAAoB,CACxB,QACA,QACA,YACA,cACA,cCDWC,ECRE,SAASA,EAAUC,GAChC,OAAOA,EAAKC,SACTC,IAAI,SAACC,GACJ,IAAMC,EAAW,CAAE,EACnB,MAAkB,SAAdD,EAAKE,KACAN,EAAUC,GACM,aAAdG,EAAKE,MACdD,EAASE,QAAUH,EAAKG,QACjBH,EAAKF,SACTC,IAAI,SAACK,GACJ,GAAmB,cAAfA,EAAMF,KAYR,OAXAD,EAASI,KAAOD,EAAMN,SACnBC,IAAI,SAACO,GACJ,MAAe,SAAXA,EAAEJ,MACJD,EAASM,KAAOD,EAAEE,IACPF,IAAAA,EAAER,SAAS,GAAGW,MAAK,KAAKH,EAAEE,SAE9BF,EAAEG,KAEb,GACCC,OAAO,SAACC,WAAQA,CAAC,GACjBC,KAAK,IACDX,CAEX,GACCS,OAAO,SAACC,GAAC,QAAOA,CAAC,SAnBf,CAqBT,GACCD,OAAO,SAACC,WAAQA,CAAC,EACtB,ECQO,SAASE,EAAQC,EAAMC,EAAON,GACpC,IAAKK,EAAKE,EAAG,CACZ,GAAIP,aAAiBQ,EAAO,CAC3B,IAAIR,EAAMO,EAOT,YADAP,EAAMS,EAAIL,EAAQM,KAAK,KAAML,EAAMC,IALvB,EAARA,IACHA,EAAQN,EAAMO,GAEfP,EAAQA,EAAMW,CAKhB,CACA,GAAIX,GAASA,EAAMY,KAElB,YADAZ,EAAMY,KAAKR,EAAQM,KAAK,KAAML,EAAMC,GAAQF,EAAQM,KAAK,KAAML,EAAM,IAGtEA,EAAKE,EAAID,EACTD,EAAKM,EAAIX,EACT,IAAMa,EAAWR,EAAKI,EAClBI,GACHA,EAASR,EAEX,CACD,CA9DO,MAAMG,eAAsB,WAClC,SAAAA,IACAA,CAgCA,OAhCAA,EAAMM,UAAUF,KAAO,SAASG,EAAaC,GAC5C,MAAMC,EAAS,IAAAT,EACTF,EAAQY,KAAKX,EACnB,GAAID,EAAO,CACV,MAAMa,EAAmB,EAARb,EAAYS,EAAcC,EAC3C,GAAIG,EAAU,CACb,IACCf,EAAQa,EAAQ,EAAGE,EAASD,KAAKP,GAClC,CAAE,MAAOS,GACRhB,EAAQa,EAAQ,EAAGG,EACpB,CACA,OAAOH,CACR,CACC,OAAOC,IAET,CAeA,OAdAA,KAAKT,EAAI,SAASY,GACjB,IACC,MAAMrB,EAAQqB,EAAMV,EACN,EAAVU,EAAMd,EACTH,EAAQa,EAAQ,EAAGF,EAAcA,EAAYf,GAASA,GAC5CgB,EACVZ,EAAQa,EAAQ,EAAGD,EAAWhB,IAE9BI,EAAQa,EAAQ,EAAGjB,EAErB,CAAE,MAAOoB,GACRhB,EAAQa,EAAQ,EAAGG,EACpB,CACD,EACOH,CACR,EACAT,CACD,CAnCmC,GAgE5B,SAAAc,EAAwBC,GAC9B,OAAOA,aAAQf,GAAkC,EAAbe,EAAShB,CAC9C,gBAnDqC,SAACiB,GAAI,QAAEC,EAAAC,EAQ/BC,EAKLC,EAgBIC,EAEAC,EACAC,EACAC,EAgBAH,EAOAA,EAWCI,EACHN,EACAO,SAAOC,QAAAC,QApEMC,EAAAA,UAAUC,IAAIC,EAAAA,SAAaD,IAAIE,EAAAA,SAAWC,MAAMjB,IAAKZ,cAApE8B,GAAM,SAAAC,IAkEZ,IAAWV,KAAOW,GAEVV,GADAP,EAAQiB,EAAmBX,IACXC,QAAQjC,OAAO4C,WACtBX,EAAQY,OAAS,IACP,IAAnBZ,EAAQY,SACVnB,EAAM/B,KAAOsC,EAAQ,IAEvBP,EAAM/B,KAAOsC,EAAQ/B,KAAK,SAE5BwB,EAAMO,QAAUA,EAGlB,OAAOU,CAAkB,CA7EzB,IAAKF,EACH,MAAO,GAGT,IAAME,EAAqB,CAAE,EACzBG,EAAiB,KAAItB,2qBAAAuB,CACLN,EAAOrD,UAAQ4D,IAAAA,EAuO9B,SAAcC,EAAMC,EAAQ3B,GAElC,IADA,IAAI4B,IACK,CACR,IAAIC,EAAiBH,IAIrB,GAHI5B,EAAe+B,KAClBA,EAAiBA,EAAe1C,IAE5B0C,EACJ,OAAOpC,EAER,GAAIoC,EAAezC,KAAM,CACxBwC,EAAQ,EACR,KACD,CACA,IAAInC,EAASO,IACb,GAAIP,GAAUA,EAAOL,KAAM,CAC1B,IAAIU,EAAeL,GAEZ,CACNmC,EAAQ,EACR,KACD,CAJCnC,EAASA,EAAOV,CAKlB,CACA,GAAI4C,EAAQ,CACX,IAAIG,EAAcH,IAClB,GAAIG,GAAeA,EAAY1C,OAASU,EAAegC,GAAc,CACpEF,EAAQ,EACR,KACD,CACD,CACD,CACA,IAAI/C,EAAO,IAAAG,EACP+C,EAASnD,EAAQM,KAAK,KAAML,EAAM,GAEtC,OADW,IAAV+C,EAAcC,EAAezC,KAAK4C,GAA8B,IAAVJ,EAAcnC,EAAOL,KAAK6C,GAAoBH,EAAY1C,KAAK8C,IAAqB9C,UAAK,EAAQ2C,GACjJlD,EACP,SAASoD,EAAiBzD,GACzBiB,EAASjB,EACT,EAAG,CACF,GAAImD,IACHG,EAAcH,MACKG,EAAY1C,OAASU,EAAegC,GAEtD,YADAA,EAAY1C,KAAK8C,GAAoB9C,UAAK,EAAQ2C,GAKpD,KADAF,EAAiBH,MACO5B,EAAe+B,KAAoBA,EAAe1C,EAEzE,YADAP,EAAQC,EAAM,EAAGY,GAGlB,GAAIoC,EAAezC,KAElB,YADAyC,EAAezC,KAAK4C,GAAkB5C,UAAK,EAAQ2C,GAIhDjC,EADJL,EAASO,OAERP,EAASA,EAAON,EAElB,QAAUM,IAAWA,EAAOL,MAC5BK,EAAOL,KAAK6C,GAAkB7C,UAAK,EAAQ2C,EAC5C,CACA,SAASC,EAAiBH,GACrBA,GACHpC,EAASO,MACKP,EAAOL,KACpBK,EAAOL,KAAK6C,GAAkB7C,UAAK,EAAQ2C,GAE3CE,EAAiBxC,GAGlBb,EAAQC,EAAM,EAAGY,EAEnB,CACA,SAASyC,KACJL,EAAiBH,KAChBG,EAAezC,KAClByC,EAAezC,KAAK4C,GAAkB5C,UAAK,EAAQ2C,GAEnDC,EAAiBH,GAGlBjD,EAAQC,EAAM,EAAGY,EAEnB,CACD,CA3TqC0C,CAAA,WAAA,QAAAjC,EAAAD,KAAAmC,IAAA,oBAAnBzB,OAALR,EAAKD,EAAA1B,MAAAmC,QAAAC,QACKC,EAAAA,UAChBC,IAAIE,EAAAA,SACJF,IAAIuB,EAAAA,SACJC,UAAUnC,IAAMf,KAAA,SAAAmD,GJZR,IAAmBnE,EAC1BoE,GIYApC,EAAYqC,EAAAA,QAJNF,IAOIG,QAAQ,QAAU,IAC9BtC,EAAYA,EAAUuC,QAAQ,OAAQ,MAIrB,YAAfxC,EAAMlC,MACRsD,EAAiBqB,UAAQzC,EAAMtC,SAAS,GAAGW,OAC3C4C,EAAmBG,GAAkB,CACnCsB,MAAO1C,EAAMtC,SAAS,GAAGW,MACzBsE,QAAS3C,EAAM4C,MACfrC,QAAS,KAEa,cAAfP,EAAMlC,MAAwBsD,GACjClB,EAAMe,EAAmBG,GJ7BHnD,EI+BLgC,EJ9BrBoC,EAAQ/E,EAAkBK,IAAI,SAACkF,GACnC,OAAOC,EAAAA,QAAQ7E,EAAM4E,EACvB,GI4BU1C,EJ3BNkC,EAAME,SAAQ,IAAS,EACZQ,EAAAA,eACXjC,EAAKA,MAAC7C,EAAMX,EAAkB+E,EAAME,SAAQ,IAAQ,IAAIS,MAjBlD,OAmBNC,SACUC,MAAM,KAAK,QIuBf9C,EHlCG,SAAmBnC,GAChC,IAAMoE,EAAQ9E,EAAkBI,IAAI,SAACkF,GACnC,OAAOC,EAAOA,QAAC7E,EAAM4E,EACvB,GACA,GAAIR,EAAME,SAAQ,IAAS,EAAG,CAC5B,IAAMnC,EAAO2C,iBACXjC,EAAAA,MAAM7C,EAAMV,EAAkB8E,EAAME,SAAQ,IAAQ,IAAIS,MAflD,OAkBR,OAAOG,EAAgBA,iBAAC/C,EAlBhB,MAkB2B,QACrC,CACE,OAAO,IAEX,CGqBmBgD,CAAUnD,GACjBI,EC/CY,SAAcpC,GACpC,IAAIoF,GAAU,EACRhD,EAAW,CACfiD,MAAO,EACPC,QAAS,GAGLC,EAAkB,IAAIC,OAAO,sBAC7BH,EAAQ,IAAIG,OAAO,aAEzB,GAAIxF,EAAKoE,MAAMmB,GAAkB,CAC/BH,GAAU,EACV,IAAAK,EAAiBzF,EAAKoE,MAAMmB,GAAhBG,EAACD,EAAA,GACbrD,EAASiD,MAAQM,SADPF,EAAEC,IAEZtD,EAASkD,QAAUK,SAASD,EAC9B,MAAO,GAAI1F,EAAKoE,MAAMiB,GAAQ,CAC5BD,GAAU,EACV,IAAAQ,EAAc5F,EAAKoE,MAAMiB,GACzBjD,EAASiD,MAAQM,SADPC,EACVxD,IACAA,EAASkD,QAAU,CACrB,CAEA,OAAIF,EACKhD,MAIX,CDoBuByD,CAAc7D,GAE3BE,IACFD,EAAIC,KAAOA,GAGTC,IACFF,EAAIE,KAAOA,GAGTC,IACFH,EAAIG,SAAWA,GAGjBH,EAAIK,QAAQwD,KAAK9D,IACO,SAAfD,EAAMlC,OACToC,EAAMe,EAAmBG,IAC3BnD,KAAOgC,EACXC,EAAIzC,KAAOD,EAAUwC,GAAOgE,QACJ,SAAfhE,EAAMlC,KACHmD,EAAmBG,GAC3Bb,QAAQwD,KAAK/D,EAAMiE,MACC,SAAfjE,EAAMlC,OACToC,EAAMe,EAAmBG,IAC3B8C,KAAOlE,EAAMkE,KACjBhE,EAAIjC,KAAOgC,GAEPkE,QAAQC,IAAIC,QACdC,QAAQC,IAAI,wBACZD,QAAQC,IAAIvE,GAEf,EACH,GAACsB,OAAAA,GAAAA,EAAArC,KAAAqC,EAAArC,KAAA+B,GAAAA,GAeH,EAAA,CAAC,MAAAvB,GAAA,OAAAe,QAAAoB,OAAAnC"}