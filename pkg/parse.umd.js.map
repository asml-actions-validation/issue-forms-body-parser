{"version":3,"file":"parse.umd.js","sources":["../src/parsers/date.js","../src/parsers/time.js","../src/parsers/index.js","../src/parsers/list.js","../src/parse.js","../src/parsers/images.js","../src/parsers/links.js","../src/parsers/duration.js"],"sourcesContent":["'use strict'\n\nimport { parse, isMatch } from 'date-fns'\nimport { zonedTimeToUtc } from 'date-fns-tz'\n\nconst loc = 'UTC'\nconst commonDateFormats = [\n  'yyyy-MM-dd',\n  'dd/MM/yyyy',\n  'dd/MM/yy',\n  'dd-MM-yyyy',\n  'dd-MM-yy',\n  'dd.MM.yyyy',\n  'dd.MM.yy'\n]\n\nexport default function parseDate(text) {\n  const match = commonDateFormats.map((format) => {\n    return isMatch(text, format)\n  })\n  if (match.indexOf(true) > -1) {\n    const date = zonedTimeToUtc(\n      parse(text, commonDateFormats[match.indexOf(true)], new Date()),\n      loc\n    ).toJSON()\n    return date.split('T')[0]\n  } else {\n    return null\n  }\n}\n","'use strict'\n\nimport { parse, isMatch } from 'date-fns'\nimport { zonedTimeToUtc, formatInTimeZone } from 'date-fns-tz'\n\nconst loc = 'UTC'\nconst commonTimeFormats = [\n  'HH:mm',\n  'HH.mm',\n  'hh:mm aaa',\n  'hh:mm a..aa',\n  'hh:mm aaaa'\n]\n\nexport default function parseTime(text) {\n  const match = commonTimeFormats.map((format) => {\n    return isMatch(text, format)\n  })\n  if (match.indexOf(true) > -1) {\n    const time = zonedTimeToUtc(\n      parse(text, commonTimeFormats[match.indexOf(true)], new Date()),\n      loc\n    )\n    return formatInTimeZone(time, loc, 'HH:mm')\n  } else {\n    return null\n  }\n}\n","'use strict'\n\nimport date from './date.js'\nimport time from './time.js'\nimport duration from './duration.js'\nimport list from './list.js'\nimport images from './images.js'\nimport links from './links.js'\n\nexport const parseDate = date\nexport const parseTime = time\nexport const parseDuration = duration\nexport const parseList = list\nexport const parseImages = images\nexport const parseLinks = links\n","'use strict'\n\nexport default function parseList(list) {\n  return list.children\n    .map((item) => {\n      const listItem = {}\n      if (item.type === 'list') {\n        return parseList(list)\n      } else if (item.type === 'listItem') {\n        listItem.checked = item.checked\n        return item.children\n          .map((child) => {\n            if (child.type === 'paragraph') {\n              listItem.text = child.children\n                .map((c) => {\n                  if (c.type === 'link') {\n                    listItem.link = c.url\n                    return `[${c.children[0].value}](${c.url})`\n                  } else {\n                    return c.value\n                  }\n                })\n                .filter((x) => !!x)\n                .join('')\n              return listItem\n            }\n          })\n          .filter((x) => !!x)\n      }\n    })\n    .filter((x) => !!x)\n}\n","'use strict'\n\nimport { unified } from 'unified'\nimport remarkParse from 'remark-parse'\nimport remarkGfm from 'remark-gfm'\nimport slugify from '@sindresorhus/slugify'\nimport remarkStringify from 'remark-stringify'\nimport stripFinalNewline from 'strip-final-newline'\nimport createDebug from 'debug'\nconst debug = createDebug('body-parser')\n\nimport {\n  parseDate,\n  parseTime,\n  parseDuration,\n  parseList,\n  parseImages,\n  parseLinks\n} from './parsers/index.js'\n\nexport default async function parseMD(body) {\n  debug('parseMD()')\n  const tokens = await unified().use(remarkParse).use(remarkGfm).parse(body)\n  if (!tokens) {\n    return []\n  }\n\n  const structuredResponse = {}\n  let currentHeading = null\n\n  for (const token of tokens.children) {\n    const text = await unified()\n      .use(remarkGfm)\n      .use(remarkStringify)\n      .stringify(token)\n    let cleanText = stripFinalNewline(text)\n\n    // remove `\\\\_`\n    if (cleanText.indexOf('\\\\_') > -1) {\n      cleanText = cleanText.replace(/\\\\_/g, '_')\n    }\n\n    // issue forms uses h3 as a heading\n    if (token.type === 'heading') {\n      currentHeading = slugify(token.children[0].value)\n      structuredResponse[currentHeading] = {\n        title: token.children[0].value,\n        heading: token.depth,\n        content: []\n      }\n    } else if (token.type === 'paragraph' && currentHeading) {\n      const obj = structuredResponse[currentHeading]\n\n      const date = parseDate(cleanText)\n      const images = parseImages(token.children)\n      const links = parseLinks(token.children)\n      const time = parseTime(cleanText)\n      const duration = parseDuration(cleanText)\n\n      if (date) {\n        obj.date = date\n      }\n\n      if (time) {\n        obj.time = time\n      }\n\n      if (duration) {\n        obj.duration = duration\n      }\n\n      if (links && links.length > 0) {\n        obj.links = links\n      }\n\n      if (images && images.length > 0) {\n        obj.images = images\n      }\n\n      obj.content.push(cleanText)\n    } else if (token.type === 'list') {\n      const obj = structuredResponse[currentHeading]\n      obj.text = cleanText\n      obj.list = parseList(token).flat()\n    } else if (token.type === 'html') {\n      const obj = structuredResponse[currentHeading]\n      obj.content.push(token.html)\n    } else if (token.type === 'code') {\n      const obj = structuredResponse[currentHeading]\n      obj.lang = token.lang\n      obj.text = cleanText\n    } else {\n      debug('unhandled token type')\n      debug(token)\n    }\n  }\n\n  for (const key in structuredResponse) {\n    const token = structuredResponse[key]\n    const content = token.content.filter(Boolean)\n    if (content && content.length > 0) {\n      if (content.length === 1) {\n        token.text = content[0]\n      }\n      token.text = content.join('\\n\\n')\n    }\n    token.content = content\n  }\n\n  return structuredResponse\n}\n","'use strict'\n\nexport default function parseImage(props) {\n  return props\n    .filter((p) => p.type === 'image')\n    .map((p) => {\n      return {\n        src: p.url,\n        alt: p.alt\n      }\n    })\n}\n","'use strict'\n\nexport default function parseLinks(props) {\n  return props\n    .filter((p) => p.type === 'link')\n    .map((p) => {\n      return {\n        src: p.url,\n        alt: p.children[0].value\n      }\n    })\n}\n","'use strict'\n\nexport default function parseDuration(text) {\n  let matched = false\n  const duration = {\n    hours: 0,\n    minutes: 0\n  }\n\n  const hoursAndMinutes = new RegExp(/([0-9]+)h([0-9]+)m/)\n  const hours = new RegExp(/([0-9]+)h/)\n\n  if (text.match(hoursAndMinutes)) {\n    matched = true\n    const [, h, m] = text.match(hoursAndMinutes)\n    duration.hours = parseInt(h)\n    duration.minutes = parseInt(m)\n  } else if (text.match(hours)) {\n    matched = true\n    const [, h] = text.match(hours)\n    duration.hours = parseInt(h)\n    duration.minutes = 0\n  }\n\n  if (matched) {\n    return duration\n  } else {\n    return null\n  }\n}\n"],"names":["commonDateFormats","commonTimeFormats","parseList","list","children","map","item","listItem","type","checked","child","text","c","link","url","value","filter","x","join","_settle","pact","state","s","_Pact","o","bind","v","then","observer","prototype","onFulfilled","onRejected","result","this","callback","e","_this","_isSettledPact","thenable","debug","createDebug","body","_iterator","_step","token","cleanText","obj","date","images","links","time","duration","key","content","Promise","resolve","unified","use","remarkParse","remarkGfm","parse","tokens","_temp2","structuredResponse","Boolean","length","currentHeading","_createForOfIteratorHelperLoose","_temp","test","update","stage","shouldContinue","updateValue","reject","_resumeAfterTest","_resumeAfterBody","_resumeAfterUpdate","_for","done","remarkStringify","stringify","_unified$use$use$stri","match","stripFinalNewline","indexOf","replace","slugify","title","heading","depth","format","isMatch","zonedTimeToUtc","Date","toJSON","split","p","src","alt","formatInTimeZone","parseTime","matched","hours","minutes","hoursAndMinutes","RegExp","_text$match","m","parseInt","_text$match2","parseDuration","push","flat","html","lang"],"mappings":"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"}