{"version":3,"file":"parse.js","sources":["../src/parsers/date.js","../src/parsers/time.js","../src/parsers/index.js","../src/parsers/list.js","../src/parse.js","../src/parsers/duration.js"],"sourcesContent":["'use strict'\n\nimport { parse, isMatch } from 'date-fns'\nimport { zonedTimeToUtc } from 'date-fns-tz'\n\nconst loc = 'UTC'\nconst commonDateFormats = [\n  'yyyy-MM-dd',\n  'dd/MM/yyyy',\n  'dd/MM/yy',\n  'dd-MM-yyyy',\n  'dd-MM-yy',\n  'dd.MM.yyyy',\n  'dd.MM.yy'\n]\n\nexport default function parseDate(text) {\n  const match = commonDateFormats.map((format) => {\n    return isMatch(text, format)\n  })\n  if (match.indexOf(true) > -1) {\n    const date = zonedTimeToUtc(\n      parse(text, commonDateFormats[match.indexOf(true)], new Date()),\n      loc\n    ).toJSON()\n    return date.split('T')[0]\n  } else {\n    return null\n  }\n}\n","'use strict'\n\nimport { parse, isMatch } from 'date-fns'\nimport { zonedTimeToUtc, formatInTimeZone } from 'date-fns-tz'\n\nconst loc = 'UTC'\nconst commonTimeFormats = [\n  'HH:mm',\n  'HH.mm',\n  'hh:mm aaa',\n  'hh:mm a..aa',\n  'hh:mm aaaa'\n]\n\nexport default function parseTime(text) {\n  const match = commonTimeFormats.map((format) => {\n    return isMatch(text, format)\n  })\n  if (match.indexOf(true) > -1) {\n    const time = zonedTimeToUtc(\n      parse(text, commonTimeFormats[match.indexOf(true)], new Date()),\n      loc\n    )\n    return formatInTimeZone(time, loc, 'HH:mm')\n  } else {\n    return null\n  }\n}\n","'use strict'\n\nimport date from './date.js'\nimport time from './time.js'\nimport duration from './duration.js'\nimport list from './list.js'\n\nexport const parseDate = date\nexport const parseTime = time\nexport const parseDuration = duration\nexport const parseList = list\n","'use strict'\n\nexport default function parseList(list) {\n  return list.children\n    .map((item) => {\n      const listItem = {}\n      if (item.type === 'list') {\n        return parseList(list)\n      } else if (item.type === 'listItem') {\n        listItem.checked = item.checked\n        return item.children\n          .map((child) => {\n            if (child.type === 'paragraph') {\n              listItem.text = child.children\n                .map((c) => {\n                  if (c.type === 'link') {\n                    listItem.link = c.url\n                    return `[${c.children[0].value}](${c.url})`\n                  } else {\n                    return c.value\n                  }\n                })\n                .filter((x) => !!x)\n                .join('')\n              return listItem\n            }\n          })\n          .filter((x) => !!x)\n      }\n    })\n    .filter((x) => !!x)\n}\n","'use strict'\n\nimport { unified } from 'unified'\nimport remarkParse from 'remark-parse'\nimport remarkGfm from 'remark-gfm'\nimport slugify from '@sindresorhus/slugify'\nimport remarkStringify from 'remark-stringify'\nimport stripFinalNewline from 'strip-final-newline'\n\nimport {\n  parseDate,\n  parseTime,\n  parseDuration,\n  parseList\n} from './parsers/index.js'\n\nexport default async function parseMD(body) {\n  const tokens = await unified().use(remarkParse).use(remarkGfm).parse(body)\n  if (!tokens) {\n    return []\n  }\n\n  const structuredResponse = {}\n  let currentHeading = null\n  for (const token of tokens.children) {\n    const text = await unified()\n      .use(remarkGfm)\n      .use(remarkStringify)\n      .stringify(token)\n    let cleanText = stripFinalNewline(text)\n\n    // remove `\\\\_`\n    if (cleanText.indexOf('\\\\_') > -1) {\n      cleanText = cleanText.replace(/\\\\_/g, '_')\n    }\n\n    // issue forms uses h3 as a heading\n    if (token.type === 'heading') {\n      currentHeading = slugify(token.children[0].value)\n      structuredResponse[currentHeading] = {\n        title: token.children[0].value,\n        heading: token.depth,\n        content: []\n      }\n    } else if (token.type === 'paragraph' && currentHeading) {\n      const obj = structuredResponse[currentHeading]\n\n      const date = parseDate(cleanText)\n      const time = parseTime(cleanText)\n      const duration = parseDuration(cleanText)\n\n      if (date) {\n        obj.date = date\n      }\n\n      if (time) {\n        obj.time = time\n      }\n\n      if (duration) {\n        obj.duration = duration\n      }\n\n      obj.content.push(cleanText)\n    } else if (token.type === 'list') {\n      const obj = structuredResponse[currentHeading]\n      obj.text = cleanText\n      obj.list = parseList(token).flat()\n    } else if (token.type === 'html') {\n      const obj = structuredResponse[currentHeading]\n      obj.content.push(token.html)\n    } else if (token.type === 'code') {\n      const obj = structuredResponse[currentHeading]\n      obj.lang = token.lang\n      obj.text = cleanText\n    } else {\n      if (process.env.DEBUG) {\n        console.log('unhandled token type')\n        console.log(token)\n      }\n    }\n  }\n\n  for (const key in structuredResponse) {\n    const token = structuredResponse[key]\n    const content = token.content.filter(Boolean)\n    if (content && content.length > 0) {\n      if (content.length === 1) {\n        token.text = content[0]\n      }\n      token.text = content.join('\\n\\n')\n    }\n    token.content = content\n  }\n\n  return structuredResponse\n}\n","'use strict'\n\nexport default function parseDuration(text) {\n  let matched = false\n  const duration = {\n    hours: 0,\n    minutes: 0\n  }\n\n  const hoursAndMinutes = new RegExp(/([0-9]+)h([0-9]+)m/)\n  const hours = new RegExp(/([0-9]+)h/)\n\n  if (text.match(hoursAndMinutes)) {\n    matched = true\n    const [, h, m] = text.match(hoursAndMinutes)\n    duration.hours = parseInt(h)\n    duration.minutes = parseInt(m)\n  } else if (text.match(hours)) {\n    matched = true\n    const [, h] = text.match(hours)\n    duration.hours = parseInt(h)\n    duration.minutes = 0\n  }\n\n  if (matched) {\n    return duration\n  } else {\n    return null\n  }\n}\n"],"names":["commonDateFormats","commonTimeFormats","parseList","list","children","map","item","listItem","type","checked","child","text","c","link","url","value","filter","x","join","_settle","pact","state","s","_Pact","o","bind","v","then","observer","parseMD","body","_iterator","_step","token","cleanText","obj","date","time","duration","key","content","Promise","resolve","unified","use","remarkParse","remarkGfm","parse","tokens","_temp2","structuredResponse","Boolean","length","currentHeading","_createForOfIteratorHelperLoose","_temp","test","update","stage","shouldContinue","_isSettledPact","result","updateValue","reject","_resumeAfterTest","_resumeAfterBody","_resumeAfterUpdate","_for","done","remarkStringify","stringify","_unified$use$use$stri","match","stripFinalNewline","indexOf","replace","slugify","title","heading","depth","format","isMatch","zonedTimeToUtc","Date","toJSON","split","formatInTimeZone","parseTime","matched","hours","minutes","hoursAndMinutes","RegExp","_text$match","m","parseInt","_text$match2","parseDuration","push","flat","html","lang","process","env","DEBUG","console","log","e","prototype","onFulfilled","onRejected","this","callback","_this","thenable"],"mappings":"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"}